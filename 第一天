#数学建模第一天
import numpy as np

#数组的构造
#手动法
a=np.array([0,1,3,5,7,9,10])
#print(a)
#步长法
b=np.arange(0,2,0.5) #三个参数arange（A，B，C），范围A~B，C为步长
#print(b)

#函数法
a1=np.linspace(0,np.pi,12)
#print(a1)

#数组的引用
b1=np.array([1,2,3,4,5])
#print(b1[1:3])   #python里面是用[]
#结果：[2 3]，打印的是第二个和第三个
#print(b1[0:3])
#这个才是从头打印
#看了桂薪的代码后补充：
#print(b[1:]) #输出b的第2到最后一个元素

# print(b[1:-1]) #输出b的第2到倒数第一个元素

#输出行列
a2=np.array([[2,4,6,8],[3,6,9,12],[4,8,12,16],[5,10,15,20]])
# print(a2[0]) #输出第一行
# print(a2[0][0]) #输出第一行第一个元素
# print(a2[0:3,:]) #输出第1到3行元素
#print(a2[1:3,2:4])  #输出第2到3行中属于第3到4列的元素

#四则运算
b2=np.array([[1,3,4],[2,6,5],[3,2,4]])
x=2*b2-2
#print(x)  -2的话会导致矩阵所有值减二

#数组间的四则运算，必须具有相同的维数
a3=np.array([[2,3,1],[4,1,2],[4,5,3]])
c1=b2+a3
#print(c)

c2=b2 * a3
#print(c2)

c3=a3 ** 2 #幂次
#print(c3)

#点积
#print(np.dot(c2,c3))
#叉积
x1=np.array([2,4,5,3,1])
y1=np.array([3,8,10,12,13])
#print(np.cross(x1,y1))
#print(np.dot(x1,y1))

#对角矩阵
x2=np.eye(3)
#print(x2)
#全为1的矩阵
x3=np.ones((2,2))
#print(x3)
#全为0的矩阵
x4=np.zeros((2,4))
#print(x4)

#print(x5)

# numpy.linalg模块包含线性代数的函数。使用这个模块，可以计算逆矩阵、求特征值、解线性方程组以及求解行列式等
x6=np.array([[3,1,0],[0,2,1],[1,0,1]])
y6=np.array([[1,2,3],[4,5,6],[7,8,9]])
#print(np.linalg.solve(x6,y6))  #x6*X=y6的解
#print(np.linalg.solve(x6.T,y6.T).T)
#代码补充：（还是桂哥牛）
#import fractions
#np.set_printoptions(formatter={'all':lambda x: str(fractions.Fraction(x).limit_denominator())})
#上面这一行代码是将小数转为分数

#print(np.linalg.inv(x6)) #转置
#print(np.linalg.det(x6)) # 行列式

#关系式
#print(x6==y6) ans会是false或者true
#print(x6>=y6)

#逻辑运算操作符
#print(x6|y6)
